from typing import Callable
from typing import Iterable
from typing import List

def greet() -> str: ...

class Application:
    _layers: LayerSystem
    def on_update(self) -> None: ...
    def append_layer(self, layer: Layer) -> None: ...
    def run(self) -> None: ...
    def should_close(self, close: bool) -> None: ...

def launch(create_app: Callable[[], Application]) -> Application: ...

class Layer:
    def __init__(self, debug_name: str) -> None: ...
    def on_attach(self) -> None: ...
    def on_detach(self) -> None: ...
    def on_update(self) -> None: ...

class LayerSystem:
    _layers: List[Layer]
    def __iter__(self) -> Iterable[Layer]: ...
    def append(self, layer: Layer) -> None: ...
    def remove(self, layer: Layer) -> None: ...
